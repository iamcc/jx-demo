Step: build-step-credential-initializer:

{"level":"warn","ts":1554449910.7135174,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554449910.7144108,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1554449911.6619952,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554449911.830302,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/*****/**-demo.git\" @ \"584c66276912dbe8be89f116c4f4d171ab8feba7\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  14.559 [id=19]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins4948278470705848248test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
Masking only exact matches of $CHARTMUSEUM_CREDS or $CHARTMUSEUM_CREDS_USR or $CHARTMUSEUM_CREDS_PSW
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
[Pipeline] withEnv
[Pipeline] {
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/*****/**-demo
[Pipeline] {
[Pipeline] checkout
[Pipeline] sh
+ make linux
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/**-demo main.go
[Pipeline] sh
+ export VERSION=0.0.0-SNAPSHOT-PR-1-1
+ skaffold build -f skaffold.yaml
time="2019-04-05T07:39:05Z" level=warning msg="config version (skaffold/v1beta2) out of date: upgrading to latest (skaffold/v1beta7)"
Generating tags...
 - changeme -> 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo:0.0.0-SNAPSHOT-PR-1-1
Tags generated in 156.918µs
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon  6.502MB
Step 1/4 : FROM scratch
 ---> 
Step 2/4 : EXPOSE 8080
 ---> Using cache
 ---> 4d54694a516a
Step 3/4 : ENTRYPOINT ["/**-demo"]
 ---> Using cache
 ---> ff5f2ecfc804
Step 4/4 : COPY ./bin/ /
 ---> 046f6f19d28a
Successfully built 046f6f19d28a
Successfully tagged 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo:0.0.0-SNAPSHOT-PR-1-1
The push refers to repository [764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo]
fd0a80e6f83f: Preparing
fd0a80e6f83f: Pushed
0.0.0-SNAPSHOT-PR-1-1: digest: sha256:39fe38108cb2caeff1983028b4f948aa02550f29c8b8ef98ac7d8efef2a8423e size: 528
Build complete in 3.899455911s
Starting test...
Test complete in 3.95µs
Complete in 3.940358822s
[Pipeline] sh
+ ** step post build --image 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo:0.0.0-SNAPSHOT-PR-1-1
[Pipeline] }
[Pipeline] // dir
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/*****/**-demo/charts/preview
[Pipeline] {
[Pipeline] sh
+ make preview
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-1-1/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-1-1/" ../*/Chart.yaml
sed -i -e "s|repository:.*|repository: 764810706964.dkr.ecr.us-east-1.amazonaws.com\/*****\/**-demo|" values.yaml
sed -i -e "s/tag:.*/tag: 0.0.0-SNAPSHOT-PR-1-1/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-1-1" >> requirements.yaml
** step helm build
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
[Pipeline] sh
+ ** preview --app **-demo --dir ../..
Creating a preview
Commit author email is empty for: 584c66276912dbe8be89f116c4f4d171ab8feba7
Looking for commits in: /home/jenkins/go/src/github.com/*****/**-demo/
Found commit author match for: ***** with email address: sic.hcq@gmail.com
Created environment *****-**-demo-pr-1
Namespace **-*****-**-demo-pr-1 created 
 expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    domain: 3.209.52.255.nip.io
    exposer: Ingress
    http: "true"
preview:
  image:
    repository: 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo
    tag: 0.0.0-SNAPSHOT-PR-1-1
Updating PipelineActivities *****-**-demo-pr-1-1 which has status Running
Preview application is now available at: http://**-demo.**-*****-**-demo-pr-1.3.209.52.255.nip.io

[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
Stage "Build Release" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
Stage "Promote to Environments" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
