Step: build-step-credential-initializer:

{"level":"warn","ts":1554449938.4881365,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554449938.4885433,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1554449939.8652043,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1554449940.0314412,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/*****/**-demo.git\" @ \"d2f0af7d9fc6dc51459f1837994c427b85a119b2\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  23.131 [id=31]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins1136186333521434090test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
Masking only exact matches of $CHARTMUSEUM_CREDS or $CHARTMUSEUM_CREDS_USR or $CHARTMUSEUM_CREDS_PSW
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
Stage "CI Build and push snapshot" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/*****/**-demo
[Pipeline] {
[Pipeline] git
Cloning the remote Git repository
Cloning repository https://github.com/*****/**-demo.git
 > git init /home/jenkins/go/src/github.com/*****/**-demo # timeout=10
Fetching upstream changes from https://github.com/*****/**-demo.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/*****/**-demo.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/*****/**-demo.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/*****/**-demo.git # timeout=10
Fetching upstream changes from https://github.com/*****/**-demo.git
 > git fetch --tags --progress https://github.com/*****/**-demo.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision d2f0af7d9fc6dc51459f1837994c427b85a119b2 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d2f0af7d9fc6dc51459f1837994c427b85a119b2
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master d2f0af7d9fc6dc51459f1837994c427b85a119b2
Commit message: "Merge pull request #1 from *****/test"
First time build. Skipping changelog.
[Pipeline] sh
+ **-release-version
+ echo 0.0.2
[Pipeline] sh
+ cat VERSION
+ ** step tag --version 0.0.2
Updating chart version in charts/**-demo/Chart.yaml to 0.0.2
Updating repository in charts/**-demo/values.yaml to 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo
Updating tag in charts/**-demo/values.yaml to 0.0.2
Tag v0.0.2 created and pushed to remote origin
[Pipeline] sh
+ make build
CGO_ENABLED=0 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/**-demo main.go
[Pipeline] sh
+ cat VERSION
+ export VERSION=0.0.2
+ skaffold build -f skaffold.yaml
time="2019-04-05T07:39:48Z" level=warning msg="config version (skaffold/v1beta2) out of date: upgrading to latest (skaffold/v1beta7)"
Generating tags...
 - changeme -> 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo:0.0.2
Tags generated in 8.938786ms
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon  6.502MB
Step 1/4 : FROM scratch
 ---> 
Step 2/4 : EXPOSE 8080
 ---> Using cache
 ---> 4d54694a516a
Step 3/4 : ENTRYPOINT ["/**-demo"]
 ---> Using cache
 ---> ff5f2ecfc804
Step 4/4 : COPY ./bin/ /
 ---> Using cache
 ---> 046f6f19d28a
Successfully built 046f6f19d28a
Successfully tagged 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo:0.0.2
The push refers to repository [764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo]
fd0a80e6f83f: Preparing
fd0a80e6f83f: Layer already exists
0.0.2: digest: sha256:39fe38108cb2caeff1983028b4f948aa02550f29c8b8ef98ac7d8efef2a8423e size: 528
Build complete in 1.032637706s
Starting test...
Test complete in 3.282Âµs
Complete in 1.051960266s
[Pipeline] sh
+ cat VERSION
+ ** step post build --image 764810706964.dkr.ecr.us-east-1.amazonaws.com/*****/**-demo:0.0.2
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/*****/**-demo/charts/**-demo
[Pipeline] {
[Pipeline] sh
+ cat ../../VERSION
+ ** step changelog --version v0.0.2
Using batch mode as inside a pipeline
Generating change log from git ref d2f0af7d9fc6dc51459f1837994c427b85a119b2 => 88d9b5734da9939f5c41fd18012629791305a6a2
Failed to enrich commits with issues: User.jenkins.io "-0" is invalid: metadata.name: Invalid value: "-0": a DNS-1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
Failed to enrich commits with issues: User.jenkins.io "-0" is invalid: metadata.name: Invalid value: "-0": a DNS-1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
Finding issues in commit messages using git format
No release found for *****/**-demo and tag v0.0.2 so creating a new release
Updated the release information at https://github.com/*****/**-demo/releases/tag/v0.0.2
generated: /home/jenkins/go/src/github.com/*****/**-demo/charts/**-demo/templates/release.yaml
Created Release **-demo-0-0-2 resource in namespace **
Updating PipelineActivity *****-**-demo-master-2 with version 0.0.2
Failed to update PipelineActivities *****-**-demo-master-2: resource name may not be empty
[Pipeline] sh
+ ** step helm release
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Uploading chart file **-demo-0.0.2.tgz to http://jenkins-x-chartmuseum:8080/api/charts
Received 401 response: {"error":"unauthorized"}
error: Failed to post chart to http://jenkins-x-chartmuseum:8080/api/charts due to response 401: {"error":"unauthorized"}
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE
